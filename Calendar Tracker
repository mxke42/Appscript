
// this function populates a cell in 'CapacityVisualization' sheet with the total man hours available between two set dates
//a trigger is set to run this functon every minute. 'enteredStartDate' and 'enteredStopDate' are set in 'CapacityVisualization' sheet


function findTotalManHoursOverRange() {
   
var app = SpreadsheetApp;
var activeSheet = app.getActiveSpreadsheet().getActiveSheet();
Logger.clear();

 
  var mockSchedulesSheet = app.getActiveSpreadsheet().getSheetByName("MockSchedules");
  var visualizationSheet = app.getActiveSpreadsheet().getSheetByName("CapacityVisualization");
  var enteredStartDate = visualizationSheet.getRange(2,2).getValue(); //trying to pull B2 // tested, working
  var enteredStopDate = visualizationSheet.getRange(3,2).getValue();  //trying to pull B3 // tested, working
  var startColumnMockSchedules = 3; //this column is the first week value
  var columnIncrement =1;
  var rowEOWDate = 2; // this is the row where EOW Dates are found
  var totalHoursOverTimeRange = 0; //
  var totalHoursRow = 9;
  var stopCondition = 0;
  var stopCondition2 = 0;
 
 
  for(stopCondition; stopCondition < 52;stopCondition++){ /*this for loop finds the first week that is greater in value than the enteredStartDate and adds
                                                            the total hours for this week to 'totalHoursOverTimeRange'*/                
  if(enteredStartDate < mockSchedulesSheet.getRange( rowEOWDate,startColumnMockSchedules).getValue())
  {
    totalHoursOverTimeRange = totalHoursOverTimeRange + mockSchedulesSheet.getRange(totalHoursRow,startColumnMockSchedules).getValue();
    stopCondition= stopCondition+53;//action to exit for loop
  }
  else
  {
  startColumnMockSchedules = startColumnMockSchedules + columnIncrement; //when start Date is greater than EOW date, column is incremented to check the next EOW date
  }
}
 
 
 
  startColumnMockSchedules = startColumnMockSchedules + columnIncrement; //need to increment to next week before checking for 'stopDate'
 
 
 
 
 
  for(stopCondition2;stopCondition2<52;stopCondition2++)  /*this for loop checks that EOW date is less than the entered stop date and add that week's man hours to
                                                           'totalHoursOverTimeRange'. loop stops when an EOW date is greater than the entered stop date */
   if (enteredStopDate > mockSchedulesSheet.getRange(rowEOWDate,startColumnMockSchedules).getValue())
   {totalHoursOverTimeRange = totalHoursOverTimeRange + mockSchedulesSheet.getRange(totalHoursRow,startColumnMockSchedules).getValue();
    startColumnMockSchedules = startColumnMockSchedules + columnIncrement;}
   
   else
   {stopCondition2= stopCondition2+53;} //action to exit for loop
 
visualizationSheet.getRange(6,2).setValue(totalHoursOverTimeRange);  //prints 'totalHoursOverTimeRange' to 'visualizationSheet'
 
}


